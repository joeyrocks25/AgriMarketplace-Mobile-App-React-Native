{"ast":null,"code":"import React, { useEffect } from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"../components/ActivityIndicator\";\nimport Button from \"../components/Button\";\nimport Card from \"../components/Card\";\nimport colors from \"../config/colors\";\nimport listingsApi from \"../api/listings\";\nimport routes from \"../navigation/routes\";\nimport Screen from \"../components/Screen\";\nimport AppText from \"../components/Text\";\nimport useApi from \"../hooks/useApi\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction ListingsScreen(_ref) {\n  var navigation = _ref.navigation;\n  var getListingsApi = useApi(listingsApi.getListings);\n  useEffect(function () {\n    getListingsApi.request();\n  }, []);\n  return _jsxs(Screen, {\n    style: styles.screen,\n    children: [getListingsApi.error && _jsxs(_Fragment, {\n      children: [_jsx(AppText, {\n        children: \"Couldn't retrieve the listings.\"\n      }), _jsx(Button, {\n        title: \"Retry\",\n        onPress: getListingsApi.request\n      })]\n    }), _jsx(ActivityIndicator, {\n      visible: getListingsApi.loading\n    }), _jsx(FlatList, {\n      data: getListingsApi.data,\n      keyExtractor: function keyExtractor(listing) {\n        return listing.id.toString();\n      },\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item;\n        return _jsx(Card, {\n          title: item.title,\n          subTitle: \"$\" + item.price,\n          imageUrl: item.images[0].url,\n          onPress: function onPress() {\n            return navigation.navigate(routes.LISTING_DETAILS, item);\n          }\n        });\n      }\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  screen: {\n    padding: 20,\n    backgroundColor: colors.light\n  }\n});\nexport default ListingsScreen;","map":{"version":3,"names":["React","useEffect","FlatList","StyleSheet","ActivityIndicator","Button","Card","colors","listingsApi","routes","Screen","AppText","useApi","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","ListingsScreen","_ref","navigation","getListingsApi","getListings","request","style","styles","screen","children","error","title","onPress","visible","loading","data","keyExtractor","listing","id","toString","renderItem","_ref2","item","subTitle","price","imageUrl","images","url","navigate","LISTING_DETAILS","create","padding","backgroundColor","light"],"sources":["C:/Users/kpfb2/Desktop/AM2 - Copy (2)/app/screens/ListingsScreen.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { FlatList, StyleSheet } from \"react-native\";\n\nimport ActivityIndicator from \"../components/ActivityIndicator\";\nimport Button from \"../components/Button\";\nimport Card from \"../components/Card\";\nimport colors from \"../config/colors\";\nimport listingsApi from \"../api/listings\";\nimport routes from \"../navigation/routes\";\nimport Screen from \"../components/Screen\";\nimport AppText from \"../components/Text\";\nimport useApi from \"../hooks/useApi\";\n\nfunction ListingsScreen({ navigation }) {\n  const getListingsApi = useApi(listingsApi.getListings);\n\n  useEffect(() => {\n    getListingsApi.request();\n  }, []);\n\n  return (\n    <Screen style={styles.screen}>\n      {getListingsApi.error && (\n        <>\n          <AppText>Couldn't retrieve the listings.</AppText>\n          <Button title=\"Retry\" onPress={getListingsApi.request} />\n        </>\n      )}\n      <ActivityIndicator visible={getListingsApi.loading} />\n      <FlatList\n        data={getListingsApi.data}\n        keyExtractor={(listing) => listing.id.toString()}\n        renderItem={({ item }) => (\n          <Card\n            title={item.title}\n            subTitle={\"$\" + item.price}\n            imageUrl={item.images[0].url}\n            onPress={() => navigation.navigate(routes.LISTING_DETAILS, item)}\n          />\n        )}\n      />\n    </Screen>\n  );\n}\n\nconst styles = StyleSheet.create({\n  screen: {\n    padding: 20,\n    backgroundColor: colors.light,\n  },\n});\n\nexport default ListingsScreen;\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,OAAAC,QAAA;AAAA,OAAAC,UAAA;AAGzC,OAAOC,iBAAiB;AACxB,OAAOC,MAAM;AACb,OAAOC,IAAI;AACX,OAAOC,MAAM;AACb,OAAOC,WAAW;AAClB,OAAOC,MAAM;AACb,OAAOC,MAAM;AACb,OAAOC,OAAO;AACd,OAAOC,MAAM;AAAwB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAErC,SAASC,cAAcA,CAAAC,IAAA,EAAiB;EAAA,IAAdC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAClC,IAAMC,cAAc,GAAGV,MAAM,CAACJ,WAAW,CAACe,WAAW,CAAC;EAEtDtB,SAAS,CAAC,YAAM;IACdqB,cAAc,CAACE,OAAO,CAAC,CAAC;EAC1B,CAAC,EAAE,EAAE,CAAC;EAEN,OACEN,KAAA,CAACR,MAAM;IAACe,KAAK,EAAEC,MAAM,CAACC,MAAO;IAAAC,QAAA,GAC1BN,cAAc,CAACO,KAAK,IACnBX,KAAA,CAAAF,SAAA;MAAAY,QAAA,GACEd,IAAA,CAACH,OAAO;QAAAiB,QAAA,EAAC;MAA+B,CAAS,CAAC,EAClDd,IAAA,CAACT,MAAM;QAACyB,KAAK,EAAC,OAAO;QAACC,OAAO,EAAET,cAAc,CAACE;MAAQ,CAAE,CAAC;IAAA,CACzD,CACH,EACDV,IAAA,CAACV,iBAAiB;MAAC4B,OAAO,EAAEV,cAAc,CAACW;IAAQ,CAAE,CAAC,EACtDnB,IAAA,CAACZ,QAAQ;MACPgC,IAAI,EAAEZ,cAAc,CAACY,IAAK;MAC1BC,YAAY,EAAE,SAAAA,aAACC,OAAO;QAAA,OAAKA,OAAO,CAACC,EAAE,CAACC,QAAQ,CAAC,CAAC;MAAA,CAAC;MACjDC,UAAU,EAAE,SAAAA,WAAAC,KAAA;QAAA,IAAGC,IAAI,GAAAD,KAAA,CAAJC,IAAI;QAAA,OACjB3B,IAAA,CAACR,IAAI;UACHwB,KAAK,EAAEW,IAAI,CAACX,KAAM;UAClBY,QAAQ,EAAE,GAAG,GAAGD,IAAI,CAACE,KAAM;UAC3BC,QAAQ,EAAEH,IAAI,CAACI,MAAM,CAAC,CAAC,CAAC,CAACC,GAAI;UAC7Bf,OAAO,EAAE,SAAAA,QAAA;YAAA,OAAMV,UAAU,CAAC0B,QAAQ,CAACtC,MAAM,CAACuC,eAAe,EAAEP,IAAI,CAAC;UAAA;QAAC,CAClE,CAAC;MAAA;IACF,CACH,CAAC;EAAA,CACI,CAAC;AAEb;AAEA,IAAMf,MAAM,GAAGvB,UAAU,CAAC8C,MAAM,CAAC;EAC/BtB,MAAM,EAAE;IACNuB,OAAO,EAAE,EAAE;IACXC,eAAe,EAAE5C,MAAM,CAAC6C;EAC1B;AACF,CAAC,CAAC;AAEF,eAAejC,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}