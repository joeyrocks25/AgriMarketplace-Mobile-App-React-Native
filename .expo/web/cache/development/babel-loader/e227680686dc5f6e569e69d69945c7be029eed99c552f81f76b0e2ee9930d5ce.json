{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport React from \"react\";\nimport { useFormikContext } from \"formik\";\nimport ErrorMessage from \"./ErrorMessage\";\nimport ImageInputList from \"../ImageInputList\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction FormImagePicker(_ref) {\n  var name = _ref.name;\n  var _useFormikContext = useFormikContext(),\n    errors = _useFormikContext.errors,\n    setFieldValue = _useFormikContext.setFieldValue,\n    touched = _useFormikContext.touched,\n    values = _useFormikContext.values;\n  var imageUris = values[name];\n  var handleAdd = function handleAdd(uri) {\n    setFieldValue(name, [].concat(_toConsumableArray(imageUris), [uri]));\n  };\n  var handleRemove = function handleRemove(uri) {\n    setFieldValue(name, imageUris.filter(function (imageUri) {\n      return imageUri !== uri;\n    }));\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(ImageInputList, {\n      imageUris: imageUris,\n      onAddImage: handleAdd,\n      onRemoveImage: handleRemove\n    }), _jsx(ErrorMessage, {\n      error: errors[name],\n      visible: touched[name]\n    })]\n  });\n}\nexport default FormImagePicker;","map":{"version":3,"names":["React","useFormikContext","ErrorMessage","ImageInputList","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","FormImagePicker","_ref","name","_useFormikContext","errors","setFieldValue","touched","values","imageUris","handleAdd","uri","concat","_toConsumableArray","handleRemove","filter","imageUri","children","onAddImage","onRemoveImage","error","visible"],"sources":["C:/Users/kpfb2/Desktop/AM2 - Copy (2)/app/components/forms/FormImagePicker.js"],"sourcesContent":["import React from \"react\";\nimport { useFormikContext } from \"formik\";\n\nimport ErrorMessage from \"./ErrorMessage\";\nimport ImageInputList from \"../ImageInputList\";\n\nfunction FormImagePicker({ name }) {\n  const { errors, setFieldValue, touched, values } = useFormikContext();\n  const imageUris = values[name];\n\n  const handleAdd = (uri) => {\n    setFieldValue(name, [...imageUris, uri]);\n  };\n\n  const handleRemove = (uri) => {\n    setFieldValue(\n      name,\n      imageUris.filter((imageUri) => imageUri !== uri)\n    );\n  };\n\n  return (\n    <>\n      <ImageInputList\n        imageUris={imageUris}\n        onAddImage={handleAdd}\n        onRemoveImage={handleRemove}\n      />\n      <ErrorMessage error={errors[name]} visible={touched[name]} />\n    </>\n  );\n}\n\nexport default FormImagePicker;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,gBAAgB,QAAQ,QAAQ;AAEzC,OAAOC,YAAY;AACnB,OAAOC,cAAc;AAA0B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE/C,SAASC,eAAeA,CAAAC,IAAA,EAAW;EAAA,IAARC,IAAI,GAAAD,IAAA,CAAJC,IAAI;EAC7B,IAAAC,iBAAA,GAAmDZ,gBAAgB,CAAC,CAAC;IAA7Da,MAAM,GAAAD,iBAAA,CAANC,MAAM;IAAEC,aAAa,GAAAF,iBAAA,CAAbE,aAAa;IAAEC,OAAO,GAAAH,iBAAA,CAAPG,OAAO;IAAEC,MAAM,GAAAJ,iBAAA,CAANI,MAAM;EAC9C,IAAMC,SAAS,GAAGD,MAAM,CAACL,IAAI,CAAC;EAE9B,IAAMO,SAAS,GAAG,SAAZA,SAASA,CAAIC,GAAG,EAAK;IACzBL,aAAa,CAACH,IAAI,KAAAS,MAAA,CAAAC,kBAAA,CAAMJ,SAAS,IAAEE,GAAG,EAAC,CAAC;EAC1C,CAAC;EAED,IAAMG,YAAY,GAAG,SAAfA,YAAYA,CAAIH,GAAG,EAAK;IAC5BL,aAAa,CACXH,IAAI,EACJM,SAAS,CAACM,MAAM,CAAC,UAACC,QAAQ;MAAA,OAAKA,QAAQ,KAAKL,GAAG;IAAA,EACjD,CAAC;EACH,CAAC;EAED,OACEX,KAAA,CAAAF,SAAA;IAAAmB,QAAA,GACErB,IAAA,CAACF,cAAc;MACbe,SAAS,EAAEA,SAAU;MACrBS,UAAU,EAAER,SAAU;MACtBS,aAAa,EAAEL;IAAa,CAC7B,CAAC,EACFlB,IAAA,CAACH,YAAY;MAAC2B,KAAK,EAAEf,MAAM,CAACF,IAAI,CAAE;MAACkB,OAAO,EAAEd,OAAO,CAACJ,IAAI;IAAE,CAAE,CAAC;EAAA,CAC7D,CAAC;AAEP;AAEA,eAAeF,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}